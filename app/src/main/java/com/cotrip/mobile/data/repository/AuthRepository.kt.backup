package com.cotrip.mobile.data.repository

import android.content.Context
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flowOf
import com.cotrip.mobile.data.model.User

// Simplified AuthRepository - just for basic UI testing
class AuthRepository(private val context: Context) {
    
    // Mock data for testing UI
    val isLoggedIn: Flow<Boolean> = flowOf(false)
    
    val currentUser: Flow<User?> = flowOf(null)
    
    suspend fun signInWithEmail(email: String, password: String): Result<User> {
        // Mock successful login for testing
        val mockUser = User(
            id = "test_id",
            email = email,
            firstName = "Test",
            lastName = "User",
            avatarUrl = null,
            createdAt = "2025-06-30"
        )
        return Result.success(mockUser)
    }
    
    suspend fun signUpWithEmail(email: String, password: String, firstName: String, lastName: String): Result<User> {
        // Mock successful signup for testing
        val mockUser = User(
            id = "test_id",
            email = email,
            firstName = firstName,
            lastName = lastName,
            avatarUrl = null,
            createdAt = "2025-06-30"
        )
        return Result.success(mockUser)
    }
    
    suspend fun signInWithGoogle(): Result<User> {
        // Mock Google sign-in for testing
        val mockUser = User(
            id = "google_test_id",
            email = "test@gmail.com",
            firstName = "Google",
            lastName = "User",
            avatarUrl = null,
            createdAt = "2025-06-30"
        )
        return Result.success(mockUser)
    }
    
    suspend fun signOut() {
        // Mock sign out
    }
    
    suspend fun getCurrentAccessToken(): String? {
        return null
    }
}
